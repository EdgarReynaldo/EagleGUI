
/**
 *
 *         _______       ___       ____      __       _______
 *        /\  ____\    /|   \     /  __\    /\ \     /\  ____\
 *        \ \ \___/_   ||  _ \   |  /__/____\ \ \    \ \ \___/_
 *         \ \  ____\  || |_\ \  |\ \ /\_  _\\ \ \    \ \  ____\
 *          \ \ \___/_ ||  ___ \ \ \ \\//\ \/ \ \ \____\ \ \___/_
 *           \ \______\||_|__/\_\ \ \ \_\/ |   \ \_____\\ \______\
 *            \/______/|/_/  \/_/  \_\_____/    \/_____/ \/______/
 *
 *
 *    Eagle Agile Gui Library and Extensions
 *
 *    Copyright 2009-2019+ by Edgar Reynaldo
 *
 *    See EagleLicense.txt for allowed uses of this library.
 *
 * @file Scrollable.hpp
 * @brief This file contains an interface for making widgets scrollable
 */

#ifndef Scrollable_HPP
#define Scrollable_HPP



/**! @class IScrollable
 *   @brief A simple interface class to give widgets scrolling abilities
 */

class IScrollable {
   int viewx;
   int viewy;
   unsigned int vieww;
   unsigned int viewh;
   
protected :
   virtual void ScrollCallback(int vx , int vy)=0;
      
public :   
   virtual void SetScrollOffset(int xoffset , int yoffset) {
      int dx = xoffset - viewx;
      int dy = yoffset - viewh;
      viewx = xoffset;
      viewy = yoffset;
      ScrollCallback(dx , dy);
   }
   void SetVisibleViewSize(unsigned int viewwidth , unsigned int viewheight) {
      vieww = viewwidth;
      viewh = viewheight;
   }
   void SetTotalViewSize(unsigned int viewwidth , unsigned int viewheight) {
      vieww = viewwidth;
      viewh = viewheight;
   }

   void ScrollViewBy(int dx , int dy) {
      SetScrollOffset(viewx + dx , viewy + dy);
   }

   int GetViewX() {return viewx;}
   int GetViewY() {return viewy;}
   int GetViewW() {return vieww;}
   int GetViewH() {return viewh;}


};






#endif // Scrollable_HPP



